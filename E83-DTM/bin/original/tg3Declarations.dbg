	include	"s12c_128.sfr"
	include	"s12c_Switches.sfr"
	title 	"tg3Declarations  Copyright (C) 2005-2011, micro dynamics GmbH"
;------------------------------------------------------------------------------
;TireGuard 3a	Betriebsprogramm 	S2.804.xx/y
;------------------------------------------------------------------------------
;Module:	tg3Declarations.asm
;
;Copyright:	(C) 2005-2011, micro dynamics GmbH
;Author(s):	Michael Frank
;Update:	20.01.2011
;
;Description:	Deklaration der globalen Konstanten und Variablen
;------------------------------------------------------------------------------
;Revision History:	Original Version  11.05
;
;20.01.2011	Version 2.50
;05.07.2008	Version 2.10
;27.11.2007	Version 2.00
;
;24.11.2006	Version 1.00
;08.11.2006	Anpassung an MC9S12C128
;
;29.03.2006	Version 1.12
;21.02.2006	Version 1.11
;08.02.2006	Version 1.10
;11.12.2005	Version 1.00
;------------------------------------------------------------------------------
					;
;------------------------------------------------------------------------------
;Publics
;------------------------------------------------------------------------------
					;
 ifne fDebug
 endif

	xdef	B_FLASH			;roData
	xdef	CAN0_CONFIG_TBL		;roData
	xdef	CONFIG_TBL		;roData
	xdef	LIN_IDENTIFIER_TBL	;roData
	xdef	MSG_IDENTIFIER_TBL	;roData
	xdef	MSG_CTR_TBL		;roData
	xdef	MSG_RX_TBL		;roData
	xdef	SW_IDENT		;roData
	xdef	SW_VERSION		;roData
	xdef	T_FLASH			;roData
					;
;
;begin 20.01.2011
	xdef	B_DATA_FLASH		;rwData
	xdef	T_DATA_FLASH		;rwData
;end
;
	xdef	B_EEPROM		;bssData
;
;begin 20.01.2011
	xdef	E_BOARD_ID		;bssData
;end
;
	xdef	HW_IDENT		;bssData
	xdef	E_CRC_KEY		;bssData
	xdef	E_CRC_CODE		;bssData
	xdef	E_CONFIG_TBL		;bssData
	xdef	E_ANALOG_COEFF_TBL	;bssData
	xdef	E_BARO_PRESSURE		;bssData
	xdef	E_DROP_REF		;bssData
	xdef	E_DROP_PRESSURE		;bssData
	xdef	E_FUN_MODE		;bssData
	xdef	E_PRESSURE		;bssData
	xdef	E_TEMPERATURE		;bssData
	xdef	E_XP_REF		;bssData
;
;begin 20.01.2011
	xdef	E_CONFIG_CRC		;bssData
;end
;
	xdef	T_EEPROM		;bssData

	xdef	BOR			;Data
	xdef	TOR			;Data
	xdef	B_RAM			;Data
	xdef	BOV			;Data
	xdef	ALARM			;Data
	xdef	ALARM_CTR		;Data
	xdef	ANALOG_BUF		;Data
	xdef	ANALOG_FLAGS		;Data
	xdef.b	_ADC_ERROR		;bitMask
					;
	xdef	ANALOG_RESULT_BUF	;Data
	xdef	ANALOG_S1_BUF		;Data
	xdef	BATTERY_VOLTAGE		;Data
	xdef	CAN_BUF			;Data
	xdef	CAN0_MSG0_BUF		;Data
	xdef	CAN0_MSG1_BUF		;Data
	xdef	CAN0_MSG2_BUF		;Data
	xdef	CAN0_TIMEOUT_CTR	;Data
	xdef	CAN0_RX_CTR		;Data
	xdef	CHECK_WAIT_CTR		;Data
					;
	xdef	COMMUNICATE_FLAGS	;Data
	xdef.b	_LOW_XP_TRIG		;bitMask
	xdef.b	_LOW_XP_FLAG		;bitMask
	xdef.b	_CAN_RFSH_TRIG		;bitMask
					;
	xdef	DROP_ALARM		;Data
	xdef	LOOP_CTR		;Data
	xdef	LOOP_FLAGS		;Data
	xdef.b	_LOOP_OV		;bitMask
	xdef.b	_LOOP_OV_CLEAR		;bitMask
	xdef.b	_LOOP_TIMEOUT		;bitMask
					;
	xdef	LAST_RX_POS		;Data
	xdef	LIN_ADC_ADDR		;Data
	xdef	LIN_RX_CTR		;Data
	xdef	MSG_RX_REC		;Data
	xdef	MSG_S1_REC		;Data
	xdef	MEAN_S1_BUF		;Data
					;
	xdef	OUTPUT_FLAGS		;Data
	xdef.b	_ALARM_TOGGLE		;bitMask
					;
	xdef	SENSOR_CTR_REC		;Data
	xdef	UNIT_TEMPERATURE	;Data
	xdef	XP			;Data
	xdef	TOV			;Data
	xdef	BOS			;Data
	xdef	TOS			;Data
	xdef	T_RAM			;Data
					;
	xdef	ALARM_CT		;Number
;
;begin 20.11.2011
	xdef.b	bt_TIREGUARD3A		;Number
;end
;
	xdef.b	CONFIG_TBL_CNT		;Number
					;
	xdef	BD_38400_REL		;Number
	xdef	BD_19200_REL		;Number
	xdef	BD_9600_REL		;Number
	xdef	BD_4800_REL		;Number
	xdef	BD_2400_REL		;Number
					;
	xdef	BD_9600x4_REL		;Number
	xdef	BD_4800x4_REL		;Number
					;
	xdef	BUS_CLK			;Number
					;
	xdef	CAN_BUF_CT		;Number
	xdef	CAN0_RX_CT		;Number
	xdef	CHECK_WAIT_CT		;Number
	xdef	CODE_SIZE		;Number
	xdef	DATA_SIZE		;Number
					;
	xdef	MEAN_S1_BUF_CT		;Number
	xdef	LIN_RX_CT		;Number
					;
	xdef.b	oIDENTIFIER		;Number
	xdef.b	oTEMPERATURE		;Number
	xdef.b	oPRESSURE		;Number
					;
;
;begin 20.01.2011
	xdef	RX_TIMEOUT_CT		;Number
	xdef	TX_TIMEOUT_CT		;Number
;end
;
	xdef	SENSOR_CT		;Number
					;
	xdef	HW_IDENT_CT		;Number
	xdef	SW_IDENT_CT		;Number
	xdef	SW_VERSION_CT		;Number
	xdef	STACK_SIZE_CT		;Number
	xdef	REGS_SIZE_CT		;Number
	xdef	VAR_SIZE_CT		;Number
	xdef.b	LOOP_CT			;Number
	xdef	TICK_REL		;Number
					;
	xdef.b	C_ATD_PRSC		;Number
	xdef.b	C_TSCR2			;Number
	xdef.b	C_SYNR			;Number
	xdef.b	C_REFDV			;Number
	xdef.b	C_FTS_FCLKDIV		;Number
					;
;//////////////////////////////////////////////////////////////////////////////
;Definition der Konstanten
;//////////////////////////////////////////////////////////////////////////////
					;
OSC_CLK:	equ	16000		;Quartztakt in kHz

 ifne fUse_PLL
BUS_CLK:	equ	24000		;Bustakt in kHz mit PLL
 else
 endif
					;
					;Zeitangaben in ms
LOOPTIME:	equ	10		;Programmlaufzeit
					;
ALARM_PERIOD:	equ	200		;Blink-Periode der Alarm-LED
					;
;
;begin 20.01.2011
					;Zeitangaben in Sekunden
SENSOR_TIMEOUT:	equ	30		;Sensorempfangs-Zeitgrenze
CAN_TIMEOUT:	equ	30		;CAN-Empfangs-Zeitgrenze
LIN_TIMEOUT:	equ	30		;LIN-Empfangs-Zeitgrenze
RX_TIMEOUT:	equ	3		;Zeitgrenze für Comline-Echoempfang
TX_TIMEOUT:	equ	3		;Zeitgrenze für Comline-Datenempfang
;end
;
					;
oIDENTIFIER:	equ	4		;
oPRESSURE:	equ	8		;
oTEMPERATURE:	equ	9		;
oBATTERY:	equ	10		;
oSTATUS:	equ	11		;
oMOVING:	equ	13		;
					;
CHECK_WAITTIME:	equ	60		;Zeitabstand in Sekunden zwischen der
					;Prüfung der Druckwertabfälle
;------------------------------------------------------------------------------
;abgeleitete Konstanten, die nicht geändert werden sollten
;------------------------------------------------------------------------------
					;
ALARM_CT:	equ	ALARM_PERIOD / (LOOPTIME * 2)
SENSOR_CT:	equ	SENSOR_TIMEOUT * 1000 / LOOPTIME
CAN0_RX_CT:	equ	CAN_TIMEOUT * 1000 / LOOPTIME
LIN_RX_CT:	equ	LIN_TIMEOUT * 1000 / LOOPTIME
;
;begin 20.01.2011
RX_TIMEOUT_CT:	equ	RX_TIMEOUT * 1000 / LOOPTIME
TX_TIMEOUT_CT:	equ	TX_TIMEOUT * 1000 / LOOPTIME
;end
;
					;
CHECK_WAIT_CT:	equ	CHECK_WAITTIME * 1000 / LOOPTIME
					;
;-----------------------------------------------------------------------------
;C_ATD_PRSC: DATA8	vorbereitet für das ATD Control Register 4
;			ATD Clock Prescaler
;Berechnungsvorschrift:
;C_ATD_PRSC:= BUS_CLK / ATD_CLK / 2 - 1
;mit 	BUS_CLK		Bustakt in kHz
;	ATD_CLOCK	AD-Wandler Takt in kHz, max. 2 MHz
;-----------------------------------------------------------------------------
					;
ATD_CLK:	equ	2000
C_ATD_PRSC:	equ	BUS_CLK / ATD_CLK / 2 - 1
					;
;-----------------------------------------------------------------------------
;C_TSCR2: DATA8		vorbereitet für das Timer System Control Register 2
;CLK_PRESCALER:		Bustakt Vorteilerwert
;-----------------------------------------------------------------------------
					;
 if BUS_CLK < 16000
 else
C_TSCR2:	equ	00000100b	;No Interrupts, Free Running Counter, Prescaler = 16
CLK_PRESCALER:	equ	16		;Vorteiler = 16
 endif
					;
;-----------------------------------------------------------------------------
;TICKTIME:
;LOOP_CT: DATA8		Anzahl der Ticks in einem Programmzyklus
;Berechnungsvorschrift:
;1. Schritt:
;TICKTIME ist so zu wählen, dass bei gegebener Programmlaufzeit LOOPTIME
;die Berechnung von LOOP_CT ein Ergebnis ohne Rest liefert.
;2. Schritt:
;TICK_CT:= LOOPTIME * 1000 / TICKTIME
;mit	LOOPTIME	Programmlaufzeit in ms
;-----------------------------------------------------------------------------
					;
TICKTIME:	equ	500		;
LOOP_CT:	equ	LOOPTIME * 1000 / TICKTIME

;-----------------------------------------------------------------------------
;TICK_REL: DATA16	Timer Startwert zur Festlegung der Programmlaufzeit
;Berechnungsvorschrift:
;TICK_REL:= BUS_CLK * TICKTIME / 1000 / CLK_PRESCALER
;mit	BUS_CLK		Bustakt in kHz
;	CLK_PRESCALER	Bustakt-Vorteiler
;	TICKTIME	Tickzeit in µs
;-----------------------------------------------------------------------------
					;
TICK_REL:	equ	BUS_CLK * TICKTIME / 1000 / CLK_PRESCALER
					;
;-----------------------------------------------------------------------------
;C_SYNR: DATA8		PLLCLK Multiplikator
;C_REFDV: DATA8		PLLCLK Dividend
;Berechnungsvorschrift:
;PLLCLK:= OSC_CLK * (C_SYNR+1) / (REFDV+1)
;-----------------------------------------------------------------------------
					;
 ifne fUse_PLL				;
   if BUS_CLK = 32000
   endif
   if BUS_CLK = 24000
C_SYNR:		equ	2		;BUS_CLK = 24,0 MHz @ OSC_CLK = 16,0 MHz
C_REFDV:	equ	1		;
   endif
   if BUS_CLK = 16000
   endif
   if BUS_CLK = 12000
   endif
 else					;
 endif
					;
;-----------------------------------------------------------------------------
					;
 if OSC_CLK > 12800
C_FTS_FCLKDIV:	equ	40h + ((OSC_CLK / 8) * (5 + 1 / BUS_CLK) / 1000) - 1
 else
 endif

BD_38400_REL:	equ	BUS_CLK * 1000 / (38400 * 16)
BD_19200_REL:	equ	BUS_CLK * 1000 / (19200 * 16)
BD_9600_REL:	equ	BUS_CLK * 1000 / (9600 * 16)
BD_4800_REL:	equ	BUS_CLK * 1000 / (4800 * 16)
BD_2400_REL:	equ	BUS_CLK * 1000 / (2400 * 16)
					;
BD_9600x4_REL:	equ	BUS_CLK * 1000 / (9600 * 4 * CLK_PRESCALER)
BD_4800x4_REL:	equ	BUS_CLK * 1000 / (4800 * 4 * CLK_PRESCALER)
					;
;/////////////////////////////////////////////////////////////////////////////
;Definition der Speicheradressen
;/////////////////////////////////////////////////////////////////////////////
					;
B_EEPROM:	equ	00400h		;MC9S12C128
T_EEPROM:	equ	00FFFh		;
					;
B_RAM:		equ	01000h		;
T_RAM:		equ	01FFFh		;
DATA_SIZE:	equ	(T_RAM - B_RAM) + 1
					;
;
;begin 18.01.2011
B_DATA_FLASH:	equ	03800h		;
T_DATA_FLASH:	equ	03FFFh		;
;end
;
B_FLASH:	equ	04000h		;
T_FLASH:	equ	0FFFFh		;
CODE_SIZE:	equ	(T_FLASH - B_FLASH) + 1
					;
;/////////////////////////////////////////////////////////////////////////////
;Definition der Board-Typen
;/////////////////////////////////////////////////////////////////////////////
					;
bt_TIREGUARD3A:	equ	08043h		;TIREGUARD IIIa Reifenüberwachungsgerät
					;
;==============================================================================
;Datendefinitionen im internen Flash-EEPROM Codespeicher
;==============================================================================
					;
.rodata:	section
					;
SW_IDENT:	dc.b	"TIREGUARD IIIa  " ;jede Zeile umfasst 16 Zeichen
		dc.b	"Copyright (C)   "
		dc.b	"2005-2011,      "
		dc.b	"micro dynamics® "
		dc.b	"GmbH, CCAA      "
SW_VERSION:	dc.b	"S2.804.25/A,    " ;das Komma muss(!) angefügt werden
		dc.b	"20.01.2011      "
SW_VERSION_CT:	equ	* - SW_VERSION
SW_IDENT_CT:	equ	* - SW_IDENT
					;
;==============================================================================
;
;Beginn der programmierbaren Werte
;
;==============================================================================
					;
CONFIG_TBL:
					;
;------------------------------------------------------------------------------
;TEMPERATURE maximal zulässige Temperatur
;
;Skalierfaktor	1.0
;Offset		0
;------------------------------------------------------------------------------
					;
TEMPERATURE:
		dc.b   120		;120 °C
					;
;------------------------------------------------------------------------------
;PRESSURE minimal zulässiger absoluter Reifendruck
;
;Skalierfaktor	0.025
;Offset		0
;------------------------------------------------------------------------------
					;
PRESSURE:
		dc.b   91		;2,275 bar ( = 1,3 bar @ 975 mbar )
					;
;------------------------------------------------------------------------------
;DROP_PRESSURE absoluter Reifendruckwert fuer Druckabfall-Überwachung
;
;Skalierfaktor	0.025
;Offset		0
;------------------------------------------------------------------------------
					;
DROP_PRESSURE:
		dc.b  107		;2,675 bar ( = 1,7 bar @ 975 mbar )
					;
;------------------------------------------------------------------------------
;DROP_REF maximal tolerierter Druckabfall / min
;
;Skalierfaktor	0.025
;Offset		0
;------------------------------------------------------------------------------
					;
DROP_REF:
		dc.b   8		;0,2 bar / min
					;
;------------------------------------------------------------------------------
;XP_REF untere Geschwindigkeitsgrenze fuer die Reifenüberwachung
;
;Skalierfaktor	0.1
;Offset		0
;------------------------------------------------------------------------------
					;
XP_REF:
		dc.w	0		;0 km/h ( = Geschwindigkeitsmaskierung ausschalten )
					;
;-----------------------------------------------------------------------------
;Reserved
;-----------------------------------------------------------------------------
					;
		dc.l	0		;
		dc.l	0FFFFFFFFh	;
					;
;-----------------------------------------------------------------------------
;FUN_MODE legt die Betriebsweise des Gerätes fest.
;
;bit 0		: Alarm-LEDs	0  im Alarmfall LEDs dauernd einschalten
;		:		1  Alarmblinken
;bit 1..7	: reserviert
;-----------------------------------------------------------------------------
					;
FUN_MODE:
		dc.b	00000001b	;Alarmblinken
					;
;-----------------------------------------------------------------------------
;BARO_PRESSURE Umgebungsluftdruck
;
;Skalierfaktor	0.025
;Offset		0
;-----------------------------------------------------------------------------
					;
BARO_PRESSURE:
		dc.b   39		;975 mbar
					;
;------------------------------------------------------------------------------
;x_COEFF_TBL enthält Urdaten für die Mittelwertberechnung.
;Die Tabelle umfasst je einen Eintrag für einen Eingang.
;
;Der Tabellenwert liefert die Anzahl der Eingangswerte, über die gemittelt
;wird.
;------------------------------------------------------------------------------
					;
ANALOG_COEFF_TBL:
		dc.b	0		;Batteriespannung
					;
CONFIG_TBL_CNT:	equ	(* - CONFIG_TBL)
					;
;==============================================================================
;
;Ende der programmierbaren Werte
;
;==============================================================================
					;
;-----------------------------------------------------------------------------
;Einstellungen fuer den CAN-Controller
;-----------------------------------------------------------------------------
					;
CAN0_CONFIG_TBL:			;1 Mbit/s @16MHz Quartz TireGuard <==> Messtechnik
					;
;Config
	 	dc.b	10000000b	;CANxCTL1: MSCAN enable, Oscillator Clock, Normal Operation
		dc.b	00000001b	;CANxBTR0: SJW=1, Prescaler=2
		dc.b	00100011b	;CANxBTR1: SAMP=0, TSEG2=3, TSEG1=4
					;
		dc.b	00100000b	;CANxIDAC: acht 8-bit Akzeptanzfilter
					;
;Descriptors
		dc.w	0DE88h		;Descriptor 0	6F4h, 8 Bytes, senden
		dc.w	0DEA8H		;Descriptor 1	6F5h, 8 Bytes, senden
		dc.w	0DB20h		;Descriptor 2	6D9h, 7 Bytes, empfangen
		dc.w	0FFE0H		;Descriptor 3
		dc.w	0FFE0h		;Descriptor 4
		dc.w	0FFE0h		;Descriptor 5
		dc.w	0FFE0h		;Descriptor 6
		dc.w	0FFE0h		;Descriptor 7
					;
LIN_IDENTIFIER_TBL:
		dc.w	LIN_ID_FL
		dc.w	LIN_ID_FR
		dc.w	LIN_ID_RL
		dc.w	LIN_ID_RR
					;
MSG_IDENTIFIER_TBL:
		dc.w	MSG_ID_FL
		dc.w	MSG_ID_FR
		dc.w	MSG_ID_RL
		dc.w	MSG_ID_RR
					;
MSG_CTR_TBL:
		dc.w	MSG_CTR_FL
		dc.w	MSG_CTR_FR
		dc.w	MSG_CTR_RL
		dc.w	MSG_CTR_RR
					;
MSG_RX_TBL:
		dc.w	MSG_RX_BUF_FL
		dc.w	MSG_RX_BUF_FR
		dc.w	MSG_RX_BUF_RL
		dc.w	MSG_RX_BUF_RR
					;
;==============================================================================
;Speicherplatzbelegung im internen EEPROM
;==============================================================================
					;
.bss:		section
					;
		align	1024
HW_IDENT:
					;
;------------------------------------------------------------------------------
;Der nachfolgende Identifier beschreibt die TireGuard 2 Hardware-Konfiguration.
;
; ! Die Reihenfolge der Werte darf nicht verändert werden !
;
E_BOARD_ID:	ds.l	1		;DATA32:
					;
HW_IDENT_CT:	equ	* - HW_IDENT
					;
;------------------------------------------------------------------------------
					;
E_CRC_KEY:
		ds.l	1		;DATA32: Erkennungsschlüssel
E_CRC_CODE:
		ds.w	1		;DATA16: CRC16-Prüfcode
					;
;------------------------------------------------------------------------------
					;
E_CONFIG_TBL:
					;extern programmierbare Werte
					;
E_TEMPERATURE:
		ds.b	1		;
E_PRESSURE:
		ds.b	1		;
E_DROP_PRESSURE:
		ds.b	1		;
E_DROP_REF:
		ds.b	1		;
E_XP_REF:
		ds.w	1		;
E_RESERVED:
		ds.l	2		;
E_FUN_MODE:
		ds.b	1		;
E_BARO_PRESSURE:
		ds.b	1		;
E_ANALOG_COEFF_TBL:
		ds.b	1		;
					;
;
;begin 20.01.2011
;		ds.b	HW_IDENT + 1022 - *
		even
E_CONFIG_CRC:
		ds.w	1		;DATA16: CRC16-Prüfcode
;end
;
					;
;==============================================================================
;Speicherplatzbelegung im internen RAM
;==============================================================================
					;
.regs:		section			;
					;
BOR:
		even
REGS:		ds.b	32		;32 Bytes globale Register R[0..31]

TOR:
REGS_SIZE_CT:	equ	TOR - BOR
					;
.data:		section			;
					;
BOV:					;Beginn der Systemvariablen
					;
;------------------------------------------------------------------------------
;Analogeingänge

ANALOG_FLAGS:	ds.b	1		;DATA8:
;
_ADC_ERROR:	equ	bit1		;
;
;
;
;
;
;
					;
		even
CAL_LOCK_CTR:	ds.w	1		;DATA16:
					;
ANALOG_BUF:	ds.w	1		;1*DATA16: Analog-Messergebnisse
ANALOG_RESULT_BUF:			;1*DATA16: Analogwerte
BATTERY_VOLTAGE:
		ds.w	1		;DATA16: Batteriespannung
					;
UNIT_TEMPERATURE:
		ds.w	1		;DATA16: Gerätetemperatur
					;
XP:		ds.w	1		;DATA16: Fahrgeschwindigkeit
					;
;------------------------------------------------------------------------------
;Modul OUTPUT
					;
OUTPUT_FLAGS:	ds.b	1		;DATA8:
;
;
;
;
;
;
;
_ALARM_TOGGLE:	equ	bit7		;
					;
ALARM_CTR:	ds.b	1		;
					;
;------------------------------------------------------------------------------
;Modul LIN
					;
LAST_RX_POS:	ds.b	1		;DATA8:
					;
		even
LIN_RX_CTR:	ds.w	1		;DATA16:
					;
;------------------------------------------------------------------------------
;Modul COMMUNICATE
					;
COMMUNICATE_FLAGS:
		ds.b	1		;DATA8:
_LOW_XP_TRIG:	equ	bit0
_LOW_XP_FLAG:	equ	bit1
;
;
_CAN_RFSH_TRIG:	equ	bit4
;
;
;
					;
		even
CAN_BUF:	equ	*
					;
CAN0_MSG0_BUF:
		ds.b	8		;8 Bytes: Messdaten
CAN0_MSG1_BUF:
		ds.b	8		;
CAN0_MSG2_BUF:
		ds.b	8		;
					;
CAN_BUF_CT:	equ	(* - CAN_BUF)
					;
CAN0_TIMEOUT_CTR:
		ds.b	1		;DATA8:
					;
CAN0_RX_CTR:	ds.w	1		;DATA16:
					;
		even
SENSOR_CTR_REC:	ds.w	4		;4*DATA16
					;
ALARM:		ds.b	1		;DATA8:
DROP_ALARM:	ds.b	1		;DATA8:
					;
CHECK_WAIT_CTR:	ds.w	1		;DATA16: Zeitzähler für Prüf-Zeitraster
					;
LIN_IDENTIFIER_REC: equ	*
					;
LIN_ID_FL:	ds.l	1		;DATA32:
LIN_ID_FR:	ds.l	1		;DATA32:
LIN_ID_RL:	ds.l	1		;DATA32:
LIN_ID_RR:	ds.l	1		;DATA32:
					;
MSG_CTR_REC:	equ	*
					;
MSG_CTR_FL:	ds.b	1		;DATA8:
MSG_CTR_FR:	ds.b	1		;DATA8:
MSG_CTR_RL:	ds.b	1		;DATA8:
MSG_CTR_RR:	ds.b	1		;DATA8:
					;
		even
MSG_RX_REC:	equ	*
					;
MSG_RX_BUF_FL:	ds.b	24		;DATA
MSG_RX_BUF_FR:	ds.b	24		;DATA
MSG_RX_BUF_RL:	ds.b	24		;DATA
MSG_RX_BUF_RR:	ds.b	24		;DATA
					;
		even
MSG_IDENTIFIER_REC: equ	*
					;
MSG_ID_FL:	ds.l	1		;DATA32:
MSG_ID_FR:	ds.l	1		;DATA32:
MSG_ID_RL:	ds.l	1		;DATA32:
MSG_ID_RR:	ds.l	1		;DATA32:
					;
		even
MSG_S1_REC:	equ	*
					;
MSG_S1_BUF_FL:	ds.b	24		;DATA
MSG_S1_BUF_FR:	ds.b	24		;DATA
MSG_S1_BUF_RL:	ds.b	24		;DATA
MSG_S1_BUF_RR:	ds.b	24		;DATA
					;
		even
LIN_ADC_ADDR:	ds.w	1		;DATA16:
					;
;------------------------------------------------------------------------------
;sonstige Variable
					;
MEAN_S1_BUF:	equ	*
ANALOG_S1_BUF:	ds.b	3*3		;3*DATA24
MEAN_S1_BUF_CT:	equ	(* - MEAN_S1_BUF)
					;
LOOP_CTR:	ds.b	1		;DATA8: Zähler für Programmzykluszeit
LOOP_FLAGS:	ds.b	1		;DATA8:
;
;
;
_LOOP_OV:	equ	bit3		;1, wenn Programmzyklus 'verschluckt' wurde
_LOOP_OV_CLEAR:	equ	bit4		;1, wenn _LOOP_OV rückgesetzt werden soll
;
;
_LOOP_TIMEOUT:	equ	bit7		;1, wenn Programmzyklus beendet ist

 ifne fDebug
 endif

TOV:

VAR_SIZE_CT:	equ	TOV - BOV

		even
BOS:		ds.b	0100h		;256 Bytes Stack
TOS:					;Anfangswert des Stackpointers

STACK_SIZE_CT:	equ	TOS - BOS
					;
;------------------------------------------------------------------------------
